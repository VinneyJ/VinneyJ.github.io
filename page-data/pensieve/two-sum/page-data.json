{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/pensieve/two-sum",
    "result": {"data":{"markdownRemark":{"html":"<h2>Problem</h2>\n<p>Given an array of integers, return indices of the two numbers such that they add up to specific target.\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.</p>\n<div class=\"gatsby-code-title\">twoSum.py</div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">nums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> target <span class=\"token operator\">=</span> <span class=\"token number\">9</span>\n<span class=\"token comment\"># Because nums[0] + nums[1] = 9</span>\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h2>Solution</h2>\n<blockquote>\n<h3>Brute Force Solution</h3>\n<p>First loop through the array by starting from index <code class=\"language-text\">i=0</code>. Secondly, nest a loop that starts from <code class=\"language-text\">j=i+1</code> inside the first loop. Inside the nested loop, we'll put a condition that checks if <code class=\"language-text\">target - nums[i]</code> is equal to <code class=\"language-text\">nums[j]</code>. If the condition is true, we'll return an array of the corresponding indices.</p>\n</blockquote>\n<div class=\"gatsby-code-title\">twoSum.py</div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">twoSum</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    numslen <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>numslen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        j <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>numslen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> target <span class=\"token operator\">-</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"No two sum of target: \"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nlst <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">]</span>\ntget <span class=\"token operator\">=</span> <span class=\"token number\">13</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>twoSum<span class=\"token punctuation\">(</span>lst<span class=\"token punctuation\">,</span> tget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#Returns: [0, 2]</span>\n\nlst <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">]</span>\ntget <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>twoSum<span class=\"token punctuation\">(</span>lst<span class=\"token punctuation\">,</span> tget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#Returns: No two sum of target: 5</span>\n\n<span class=\"token comment\">#Time complexity: O(n^2)</span>\n<span class=\"token comment\">#Space: O(n)</span></code></pre></div>\n<p>The time complexity of the solution is <code class=\"language-text\">O(n^2)</code> and space of <code class=\"language-text\">O(n)</code>.</p>\n<blockquote>\n<h3>Optimized Solution</h3>\n</blockquote>\n<blockquote>\n<p>In this new solution, we will introduce a hashing mechanism to store the <code class=\"language-text\">complement</code> value. Declare a dictonary to store the diffrence between target and items in the list. Loop through the indices while checking if the <code class=\"language-text\">complement</code> is in the dictionary. If it exists access the index using the item <code class=\"language-text\">hash_map[complement]</code>. Return the index of complement and the current index. Otherwise return <code class=\"language-text\">No two sum of target</code></p>\n</blockquote>\n<div class=\"gatsby-code-title\">twoSum.py</div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">twoSum</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    hash_map <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    numslen <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>numslen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        complement <span class=\"token operator\">=</span> target <span class=\"token operator\">-</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">if</span> complement <span class=\"token keyword\">in</span> hash_map<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>hash_map<span class=\"token punctuation\">[</span>complement<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span>\n\n        hash_map<span class=\"token punctuation\">[</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>i\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"No two sum of target: \"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nlst <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">]</span>\ntget <span class=\"token operator\">=</span> <span class=\"token number\">13</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>twoSum<span class=\"token punctuation\">(</span>lst<span class=\"token punctuation\">,</span> tget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#Returns: [0, 2]</span>\n\nlst <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">]</span>\ntget <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>twoSum<span class=\"token punctuation\">(</span>lst<span class=\"token punctuation\">,</span> tget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#Returns: No two sum of target: 5</span>\n\n<span class=\"token comment\">#Time complexity: O(n)</span>\n<span class=\"token comment\">#Space: O(n)</span></code></pre></div>\n<p>The time complexity of the solution is <code class=\"language-text\">O(n)</code> and space of <code class=\"language-text\">O(n)</code>.</p>","frontmatter":{"title":"Two Sum Problem","description":"Finding indices of the target sum in an array","date":"2022-10-23","slug":"/pensieve/two-sum","tags":["dsa","python3","array","hashing","easy"]}}},"pageContext":{}},
    "staticQueryHashes": ["3115057458"]}